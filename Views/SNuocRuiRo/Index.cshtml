
@{
    ViewBag.Title = "Danh sách các nước có rủi ro cao";
}

<div class="mx-ecus">
    <div class="card">
        <div class="card-header">
            <div class="card-title bold">@ViewBag.Title</div>
            <div class="card-right">
                <button class="btn btn-primary" id="btn-add" type="button" data-bs-toggle="modal" data-bs-target="#CHITIET"><i class="icon-add-ico-tsd"></i><span class="ml8">Thêm mới</span></button>
            </div>
        </div>
        <div class="card-body" style="max-height: 929px;">
            <div class="frame-header">
                <div class="frame-search">
                    <input name="Ma" placeholder="Mã nước" class="width100px item-search" autocomplete="off" />
                    <input name="Ten" placeholder="Mã sân bay" class="item-search wid240px" autocomplete="off" />
                    <button class="btn btn-primary btnSearch" type="button"><i class="fa fa-search"></i></button>
                </div>
            </div>
            <div class="frame-body has-scroll" style="">
                <table class="width100" id="TBLDANHSACH">
                    <thead>
                        <tr>
                            <th class="width75px text-center">STT</th>
                            <th class="width70px text-center">Thao tác</th>
                            <th class="text-center">Quốc gia</th>
                            <th class="text-center">Mã sân bay</th>
                            <th class="text-center">Ghi chú</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="frame-footer">
                @Html.Partial("_PaginationPartial")
            </div>
        </div>
    </div>
</div>

<div class="modal modal-edit left fade" id="CHITIET" role="dialog" aria-labelledby="exampleModalLabel" data-bs-keyboard="true" aria-bs-hidden="true" data-bs-backdrop="static" style="padding-top: 42px !important;">
    <div class="modal-dialog modal-md modal-dialog-slideout" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="exampleModalLabel">
                    Thông tin đối tượng
                </h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <i class="icon-close-ico-tsd"></i>
                </button>
            </div>
            <div class="modal-body" style="background-color: #FBFBFB">
                <div class="modal-body-content" style="padding: 16px; background-color: #FFFFFF;height: 100%;">
                    <form id="ModalForm">
                        <input name="Id" class="hidden" value="" />

                        <div class="row mb6">
                            <div class="col-md-6">Quốc gia <span class="red">*</span></div>
                            <div class="col-md-6">Mã sân bay <span class="red">*</span></div>
                        </div>
                        <div class="mb16 row">
                            <div class="col-md-6">
                                <input name="Nuoc" type="text" placeholder="Nhập nội dung" class="wid100" maxlength="50" value="" autocomplete="off" />
                            </div>
                            <div class="col-md-6">
                                <input name="MaSanBay" type="text" placeholder="Nhập nội dung" class="wid100" maxlength="50" value="" autocomplete="off" />
                            </div>
                        </div>

                        <div class="row mb6">
                            <div class="col-md-6">Mã nước</div>
                        </div>
                        <div class="mb16 row">
                            <div class="col-md-6">
                                <input name="MaNuoc" type="text" placeholder="Nhập nội dung" class="wid100" maxlength="50" value="" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row mb6">
                            <div class="col-md-12">Ghi chú</div>
                        </div>
                        <div class="mt6 mb16 row">
                            <div class="col-md-12">
                                <textarea name="GhiChu" rows="2" class="wid100" maxlength="2000"></textarea>
                            </div>
                        </div>
                    </form>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fa fa-times"></i><span class="ml8">Đóng</span></button>
                <button type="button" class="btn btn-primary" id="btn-save"><i class="fa fa-save"></i><span class="ml8">Lưu lại</span></button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var $header = $('.frame-search');
        const $footer = $('.frame-footer');
        const $table = $('#TBLDANHSACH');
        const $tableBody = $table.find('tbody');
        const $modal = $('#CHITIET');
        const $router = "SNuocRuiRo";
        const $form = $('#ModalForm');


        function DataSearch(pageNum) {
            this.Ma = $header.find('[name=Ma]').val().trim();
            this.Ten = $header.find('[name=Ten]').val().trim();
            this.PageNum = pageNum || $footer.find('[name=PageNumber]').val();;
            this.PageSize = $footer.find('[name=PageLength]').val();
        }

        $(function () {
            var $page = {
                init: function () {
                    $page.initValidate();
                    $page.BtnSearchClick();
                    $page.GetList(1);
                },
                initValidate: function () {
                    $form.validate({
                        rules: {
                            Nuoc: {
                                required: true
                            },
                            MaSanBay: {
                                required: true
                            },
                        },
                        messages: {
                            Nuoc: {
                                required: "Quốc gia không được để trống"
                            },
                            MaSanBay: {
                                required: "Mã sân bay không được để trống"
                            }
                        }
                    })
                },
                Self: $('.card'),
                BtnSearchClick: function () {
                    $header.find('.btnSearch').on('click', function () { $page.GetList(1); });
                },
                GetList: function (pageNum = 1) {

                    let html = '';
                    let search = new DataSearch(pageNum);

                    var getResponse = AjaxConfigHelper.SendRequestToServer(`/${$router}/GetTable`, "GET", search);
                    getResponse.then((res) => {
                        if (res.IsOk) {
                            let data = res.Body.Data || [];

                            if (data.length == 0) {
                                html = `<tr><td class="text-center" colspan="5"><span>Không có bản ghi</span></td></tr>`;
                                $tableBody.html(html);
                                return false;
                            }

                            let startIndex = res.Body.Pagination.StartIndex || 1;
                            for (let item of data) {
                                html += `<tr class="TR_${item.Id}">` +
                                    `<td class="text-center">${startIndex}</td>` +
                                    `<td class="text-center event-handle">` +
                                    `<i class="icon-edit-ico-tsd btn-action btnEdit blue mr10" data-id="${item.Id}" title="Sửa"></i>` +
                                    `<i class="icon-delete-ico-tsd btn-action btnDelete red" data-id="${item.Id}" title="Xóa"></i>` +
                                    `</td>` +
                                    `<td class="">${item.Nuoc}</td>` +
                                    `<td class="">${item.MaSanBay}</td>` +
                                    `<td class="">${item.GhiChu}</td>` +
                                    `</tr>`;
                                startIndex++;
                            }
                            $tableBody.html(html);

                            $pagination.Set($footer, res.Body.Pagination, $page.GetList);

                            $page.ViewClick();
                            $page.DeleteClick();
                        }
                        else {

                        }
                    })
                },
                ViewClick: () => {
                    $page.Self.find('.btnEdit').off('click').on('click', function () {
                        let id = $(this).data('id');

                        var getResponse = AjaxConfigHelper.SendRequestToServer(`/${$router}/GetItem`, "GET", { 'id': id });
                        getResponse.then((res) => {
                            if (res.IsOk) {
                                let data = res.Body.Data || {};
                                for (let prop in data) {
                                    if (prop == 'Enable') {
                                        $modal.find(`[name=${prop}]`).prop('checked', data[prop] == 1);
                                        continue;
                                    }
                                    if (prop.indexOf('Time') > -1 || prop.indexOf('Ngay') > -1) {
                                        data[prop] = formatDateFromServer(data[prop]);
                                    }
                                    $modal.find(`[name=${prop}]`).val(data[prop]);
                                }
                                $modal.modal('show');
                            }
                            else {

                            }
                        })
                    })
                },
                DeleteClick: () => {
                    $page.Self.find('.btnDelete').off('click').on('click', function () {
                        let id = $(this).data('id');

                        ConfirmDelete(function () {
                            var getResponse = AjaxConfigHelper.SendRequestToServer(`/${$router}/Delete`, "POST", { 'id': id });
                            getResponse.then((res) => {
                                if (res.IsOk) {
                                    ToastSuccess("Xóa");
                                    $page.GetList();
                                }
                                else {

                                }
                            })
                        })
                    })
                }
            };

            var $ChiTiet = {
                init: function () {
                    this.Save();
                    this.ResetForm();
                },
                Self: $('#CHITIET'),
                ResetForm: () => {
                    $modal.on('hidden.modal.bs', () => {
                        $form.find('input').val('');
                        $form.find('textarea').val('');
                        $form.find('input:checkbox').prop('checked', true);
                        $form.find('select').find('option:first-child').prop('selected', true);
                        $form.validate().resetForm();
                        $form.find('.error').removeClass('error');
                    })
                },
                GetDataInput: () => {
                    if (!$form.valid()) {
                        return false;
                    }
                    let data = GetFormDataToObject($form);
                    return data;
                },
                Save: () => {
                    $modal.find('#btn-save').off('click').on('click', () => {
                        let data = $ChiTiet.GetDataInput();
                        if (!data)
                            return false;
                        let action = data.Id > 0 ? 'Update' : 'Create';
                        var getResponse = AjaxConfigHelper.SendRequestToServer(`/${$router}/${action}`, "POST", data);
                        getResponse.then((res) => {
                            if (res.IsOk) {
                                let actionSub = data.Id > 0 ? 'Cập nhật' : 'Thêm mới';
                                ToastSuccess(actionSub);
                                $page.GetList(data.Id > 0 ? null : 1);
                                $modal.modal('hide');
                            }
                            else {

                            }
                        })
                    })
                }
            };


            $page.init();
            $ChiTiet.init();
        });
    </script>
}